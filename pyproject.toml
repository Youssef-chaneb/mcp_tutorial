[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-tutorial"
version = "0.1.0"
description = "A step-by-step tutorial for learning the Model Context Protocol (MCP)"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Youssef Chaneb", email = "youssef.hassani.chaneb@gmail.com"},
]
dependencies = [
    "mcp>=0.1.0",
    "asyncio>=3.4.3",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=7.0.0",
    "mypy>=1.0.0",
    "pre-commit>=4.0.0",
    "ruff>=0.9.0",
]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "build",
]

# Same as Black.
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`), pycodestyle (`E`), and isort (`I`) codes by default.
select = ["E", "F", "I"]
ignore = [
    "E501",  # Line length is handled by black
    "F401",  # Unused imports - these are often intentional in tutorial code
    "F841",  # Unused variables - these are often intentional in tutorial code
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"src/section_1/*.py" = ["F401", "F841"]  # Ignore unused imports and variables in section 1
"src/section_2/*.py" = ["F401", "F841"]  # Ignore unused imports and variables in section 2

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
